[include mainsail.cfg]

[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
microsteps: 16
## ajustement de la distance par rotation
# ( m / d) * c = n
# d = distance souhaitée
# m = distance mesurée
# c = rotation_distance actuelle
# n = rotation_distance calibré
#rotation_distance: 39.868
rotation_distance: 40
endstop_pin: ^!ar3
position_endstop: -5
position_min : -5
position_max: 305
homing_speed: 40.0

[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar56
microsteps: 16
## ajustement de la distance par rotation
# ( m / d) * c = n
# d = distance souhaitée
# m = distance mesurée
# c = rotation_distance actuelle
# n = rotation_distance calibré
#rotation_distance: 39.868
rotation_distance: 40
endstop_pin: ^!ar14
position_endstop: -5
position_min : -5
position_max: 305
homing_speed: 40
homing_positive_dir: false

[stepper_z]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
microsteps: 16
## ajustement de la distance par rotation
# ( m / d) * c = n
# d = distance souhaitée
# m = distance mesurée
# c = rotation_distance actuelle
# n = rotation_distance calibré
### indiquer la même valeur en z1
#rotation_distance: 8.0096
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -3
position_max: 400
homing_speed: 10
second_homing_speed: 1

[stepper_z1]
step_pin: ar36
dir_pin: !ar34
enable_pin: !ar30
microsteps: 16
#rotation_distance: 8.0096
rotation_distance: 8

[extruder]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
microsteps: 16

## Marquez votre filament à 120 mm au-dessus de l'entrée de votre extrudeuse.
# Chauffer la buse à la température d'impression souhaitée
# G90
# G1 z50
# G92 E0
# G1 E100 F60
# Mesurez maintenant la distance entre l'entrée de votre extrudeuse et la marque sur votre filament.
# c = rotation_distance actuelle
# m = filament restant mesuré
# d = mm souhaité
# n = nouvelle rotation_distance
# ((120 - m) / d) * c = n
# 2022-09-03 : (120 - 20,5) / 100 * 7.381 = 7.344
# 2022-11-15 : (120 - 11,67) / 100 * 7 = 7.583
#rotation_distance: 7.583
rotation_distance: 7.583
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
#min_extrude_temp: 160
min_extrude_temp: 190
min_temp: 5
max_temp: 300
# pressure_advance = <start> + <measured_height> * <factor>. 
# (For example, 0 + 12.90 * .020 would be .258)
# 0 + 10.36 * 0.005 = 0.0518
#pressure_advance = 0.394
pressure_advance = 0.0518
max_extrude_only_distance: 500
max_extrude_cross_section: 2

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
min_temp: 5
max_temp: 150

[fan]
pin: ar9
kick_start_time: 0.500

[heater_fan my_nozzle_fan]
pin: ar7
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[neopixel my_neopixel]
pin: ar4
#   The pin connected to the neopixel. This parameter must be
#   provided.
#chain_count:
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
#initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.

[mcu]
#make sure this reflects your serial port you found when flashing klipper
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: cartesian
#max_velocity: 300
#max_accel: 3000 #☺1750
#max_accel_to_decel: 1750 #1750
max_velocity: 200
max_accel: 4000
max_z_velocity: 50
max_z_accel: 100
square_corner_velocity: 5

[input_shaper]
#shaper_freq_x: 38.9  # frequency for the X mark of the test model
#shaper_freq_y: 36.36  # frequency for the Y mark of the test model
shaper_freq_x: 34.3
shaper_freq_y: 27
shaper_type: mzv

[probe]
pin: ^ar18
x_offset: -43.0  # TOUCH_MI X offset
y_offset: -32.0  # TOUCH_MI Y offset
speed: 3.0
samples: 1
samples_result: average

[safe_z_home]
home_xy_position: 190,182 # Change coordinates to the center of your print bed
speed: 150
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 25,25
mesh_max: 262,265
probe_count: 7,7
relative_reference_index: 24
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 3.0
split_delta_z: .010
fade_start: 1.0
fade_end: 5.0

[bed_screws]
screw1: 55,55
screw1_name: front left
screw2: 255,55
screw2_name: front right
screw3: 255,255
screw3_name: back right
screw4: 55,255
screw4_name: back left
speed: 100.0


[screws_tilt_adjust]
screw1: 90,80
screw1_name: front left
screw2: 290,80
screw2_name: front right
screw3: 90,280
screw3_name: back left
screw4: 290,280
screw4_name: back right
speed: 100.0
screw_thread: CW-M5

#uncomment the following lines to use Z_TILT_ADJUST and uncomment G34 Macro to use G34
#[z_tilt]
#z_positions:
#     -25,150
#     335,150
#
#points:
#    78,150
#    305,150
#speed: 100
#horizontal_move_z: 10
#retries: 5
#retry_tolerance: 0.02


[delayed_gcode report_temp]
initial_duration: 2
gcode:

   #if the extruder is off
   {% if printer.extruder.target == 0 %}

	#if the bed is off
	{% if printer.heater_bed.target == 0 %}
		#Set the LED to red if the extruder is off but is still hot, otherwise
		# set the color to WHITE
		{% if printer.extruder.temperature > 50.0 %}
			{% set scaler = 50|float / printer.extruder.temperature|float %}
			SET_LED LED=my_neopixel RED=1 GREEN=0 BLUE={ scaler|float * 1 }

		{% else %}
			SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1

		{% endif %}


	{% else %}

	   	#if the bed is still heating
        {% if printer.heater_bed.temperature >= printer.heater_bed.target - 4.0 %}
            SET_LED LED=my_neopixel RED=1 GREEN=0 BLUE=1

        {% else %}
	   	    {% set scaler = printer.heater_bed.temperature|float / printer.heater_bed.target|float %}
		    SET_LED LED=my_neopixel RED={ scaler|float * 1 } GREEN=0 BLUE=1

	    {% endif %}

	{% endif %}

   {% else %}

         #if the extruder temp is at target temperature
         {% if printer.extruder.temperature >= printer.extruder.target - 4.0 %}
		SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1

         #if the extruder is still heating
         {% else %}
		{% set scaler = printer.extruder.temperature|float / printer.extruder.target|float %}
		SET_LED LED=my_neopixel RED=1 GREEN=0 BLUE={ 1-scaler|float * 1 }

         {% endif %}

   {% endif %}

   UPDATE_DELAYED_GCODE ID=report_temp DURATION=2

[gcode_macro M150]
gcode:
      {% set P = params.P|default(255)|float/255 %}
      {% set RED = params.R|default(0)|float*P/255 %}
      {% set GREEN = params.U|default(0)|float*P/255 %}
      {% set BLUE = params.B|default(0)|float*P/255 %}


      SET_LED LED=my_neopixel RED={RED} GREEN={GREEN} BLUE={BLUE}


[gcode_macro LED_ON]
gcode:
  SET_LED LED=my_neopixel RED=1 GREEN=1 BLUE=1


[gcode_macro LED_OFF]
gcode:
  SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0


[gcode_macro G29]
gcode:
 BED_MESH_CLEAR
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=x1
 G1 Z0.1 F3000 #mouvement de rétractation du plapeur
 G1 Z1 F3000

#[gcode_macro G34]
#gcode:
#     G28
#     Z_TILT_ADJUST


[gcode_macro G35]
gcode:
     G28
     SCREWS_TILT_CALCULATE

[gcode_macro START_PRINT]
gcode:
   #Get Bed and Extruder temperature from Slicer GCode
     {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
     {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
     {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
     #Preheat nozzle and bed

     M140 S{BED_TEMP} # Démarrage chauffage plateau
     M190 S{BED_TEMP} # Attendre température plateau avant de continuer
   #Réglages plateau
# Desactivation de la feature G34 / Z_TILT_ADJUST car j'ai encore ma courroie entre les deux moteurs de l'axe Z
#      G34 # Z_STEPPER_AUTO_ALIGN
#      G29 # Auto nivelage

# call this below if you don't wand adaptative bed mesh size
#    HOME_LOAD_BED
     G90
     G28 # Origines des 3 axes
     ADAPTIVE_BED_MESH SIZE={FL_SIZE}
     G1 Z0.1 F3000 #mouvement de rétractation du plapeur
     G1 Z1 F3000
   #Mise en position de la tête hors du plateau pour chauffe
     G1 X30 Y0 F5000.0
     G1 Z0.1 F3000.0
   # Pose de la tete sur le plateau pour éviter les coulures de filament
     G1 Z0 F1000.0
     M104 S{EXTRUDER_TEMP} # Démarrage chauffage buse
     M109 S{EXTRUDER_TEMP} # Attendre température buse avant de continuer
   #Tracage ligne d'amorçage
     M117 # Purge extrudeur
     G92 E0 # RAZ extrudeur
     G1 Z1.0 F3000 # Remonte Z pour éviter collision avec plateau
     G1 X30 Y10 Z0.3 F5000.0 # Déplacement vers ligne de purge
     G1 X150 Y10 Z0.3 F1500.0 E15 # Extrusion première ligne
     G1 X150 Y10.3 Z0.3 F5000.0 # Décallage pour la seconde ligne
     G1 X30 Y10.3 Z0.3 F1500.0 E30 # Extrusion seconde ligne
     G92 E0 # RAZ extrudeur
     G1 Z1.0 F3000 # Remonte Z pour éviter collision avec plateau

[gcode_macro HOME_LOAD_BED]
gcode:
  G90
  G28 # Origines des 3 axes
  BED_MESH_PROFILE LOAD=x1
  G1 Z0.1 F3000 #mouvement de rétractation du plapeur
  G1 Z1 F3000


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G90
    G1 X150 Y150 Z180              ; move to servicing position
    G91
    G1 E10 F300                    ; extrude a little to soften tip
    G1 E-10 F3000                  ; jerk the filament out of the melt zone
    G1 E-50 F1800                  ; retract the rest of the way
    G1 E-10 F900                   ; retract the rest of the way

[gcode_macro LOAD_FILAMENT]
gcode:
    G91                            ; set extruder to relative
    G1 E30 F300                    ; load
    G1 E50 F150                    ; prime nozzle with filament

[gcode_macro END_PRINT]
gcode:
    G91 # Passage en position relative
    G1 E-0.8 F2400 ; retract
    G1 E-2 Z0.2 F2400
    G1 Z10 F3000 # Remonte Z pour éviter collision avec pièce
    G90 # Passage en position absolue
    G1 X0 Y200 F2000 # Déplacement du plateau vers l'avant
    M104 S0 # Extinction buse
    M140 S0 # Extinction plateau
    M84 # Extinction des moteurs
    M106 S0 # Extinction des ventilateurs

[pause_resume]
recover_velocity: 50.

#[filament_switch_sensor my_sensor]
#Move filament runout sensor from TFT to X+ endstop pin. Uncomment all except this line if you want to use this.
#pause_on_runout: False
#runout_gcode: PAUSE
#insert_gcode: RESUME
#switch_pin: ar2

# Arduino aliases for atmega2560/1280 (Arduino mega) boards
[board_pins arduino-mega]
aliases:
    ar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,
    ar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,
    ar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,
    ar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,
    ar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,
    ar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,
    ar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,
    ar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,
    ar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,
    ar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,
    ar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,
    ar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,
    ar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,
    ar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,
    analog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,
    analog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,
    analog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,
    analog15=PK7,
    # Marlin adds these additional aliases
    ml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,
    ml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,
    ml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,
    ml85=PH7

[respond]

[include maco_bed_mesh.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.642
#*# pid_ki = 1.404
#*# pid_kd = 75.859
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 47.399
#*# pid_ki = 0.309
#*# pid_kd = 1820.131
#*#
#*# [probe]
#*# z_offset = 3.425
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.027500, -0.075000, -0.040000, -0.077500, -0.100000
#*# 	-0.080000, -0.080000, -0.045000, -0.065000, -0.082500
#*# 	-0.090000, -0.067500, -0.005000, -0.002500, -0.002500
#*# 	-0.015000, -0.010000, 0.045000, 0.020000, 0.005000
#*# 	-0.030000, -0.020000, 0.010000, -0.010000, -0.022500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 262.0
#*# min_y = 25.0
#*# max_y = 265.0
#*#
#*# [bed_mesh x1]
#*# version = 1
#*# points =
#*# 	-0.027500, -0.075000, -0.040000, -0.077500, -0.100000
#*# 	-0.080000, -0.080000, -0.045000, -0.065000, -0.082500
#*# 	-0.090000, -0.067500, -0.005000, -0.002500, -0.002500
#*# 	-0.015000, -0.010000, 0.045000, 0.020000, 0.005000
#*# 	-0.030000, -0.020000, 0.010000, -0.010000, -0.022500
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 262.0
#*# min_y = 25.0
#*# max_y = 265.0
